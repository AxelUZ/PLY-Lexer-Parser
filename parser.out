Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    VOID

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON return_vars MAIN body END
Rule 2     program -> PROGRAM ID SEMICOLON MAIN body END
Rule 3     return_vars -> vars
Rule 4     return_vars -> return_vars vars
Rule 5     vars -> VAR list_vars COLON type SEMICOLON
Rule 6     vars -> list_vars COLON type SEMICOLON
Rule 7     list_vars -> ID
Rule 8     list_vars -> list_vars COMMA ID
Rule 9     type -> INT
Rule 10    type -> FLOAT
Rule 11    return_statement -> statement
Rule 12    return_statement -> return_statement statement
Rule 13    body -> LBRACE return_statement RBRACE
Rule 14    statement -> assign
Rule 15    statement -> condition
Rule 16    statement -> cycle
Rule 17    statement -> print
Rule 18    statement -> empty
Rule 19    assign -> ID seen_assign_ID EQUAL seen_term_EQUAL expression seen_exp_quad_E SEMICOLON
Rule 20    seen_assign_ID -> <empty>
Rule 21    seen_term_EQUAL -> <empty>
Rule 22    seen_exp_quad_E -> <empty>
Rule 23    condition -> IF LPAREN expression RPAREN body
Rule 24    condition -> IF LPAREN expression RPAREN body ELSE body
Rule 25    cycle -> DO body WHILE LPAREN expression RPAREN SEMICOLON
Rule 26    print -> PRINT LPAREN list_print_expression RPAREN SEMICOLON
Rule 27    print -> PRINT LPAREN list_print_cte RPAREN SEMICOLON
Rule 28    list_print_expression -> expression
Rule 29    list_print_expression -> list_print_expression COMMA expression
Rule 30    list_print_cte -> CTE_STRING
Rule 31    list_print_cte -> list_print_cte COMMA CTE_STRING
Rule 32    expression -> exp
Rule 33    expression -> exp GT exp
Rule 34    expression -> exp LT exp
Rule 35    expression -> exp NE exp
Rule 36    exp -> term
Rule 37    exp -> exp PLUS seen_exp_PLUS_MINUS term seen_exp_quad_P_M
Rule 38    exp -> exp MINUS seen_exp_PLUS_MINUS term seen_exp_quad_P_M
Rule 39    seen_exp_PLUS_MINUS -> <empty>
Rule 40    seen_exp_quad_P_M -> <empty>
Rule 41    term -> factor
Rule 42    term -> term TIMES seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D
Rule 43    term -> term DIVIDE seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D
Rule 44    seen_term_TIMES_DIVIDE -> <empty>
Rule 45    seen_exp_quad_T_D -> <empty>
Rule 46    factor -> LPAREN expression RPAREN
Rule 47    factor -> PLUS ID seen_factor_ID
Rule 48    factor -> MINUS ID seen_factor_ID
Rule 49    factor -> PLUS cte
Rule 50    factor -> MINUS cte
Rule 51    factor -> ID seen_factor_ID
Rule 52    factor -> cte
Rule 53    seen_factor_ID -> <empty>
Rule 54    cte -> CTE_INT
Rule 55    cte -> CTE_FLOAT
Rule 56    empty -> <empty>

Terminals, with rules where they appear

COLON                : 5 6
COMMA                : 8 29 31
CTE_FLOAT            : 55
CTE_INT              : 54
CTE_STRING           : 30 31
DIVIDE               : 43
DO                   : 25
ELSE                 : 24
END                  : 1 2
EQUAL                : 19
FLOAT                : 10
GT                   : 33
ID                   : 1 2 7 8 19 47 48 51
IF                   : 23 24
INT                  : 9
LBRACE               : 13
LPAREN               : 23 24 25 26 27 46
LT                   : 34
MAIN                 : 1 2
MINUS                : 38 48 50
NE                   : 35
PLUS                 : 37 47 49
PRINT                : 26 27
PROGRAM              : 1 2
RBRACE               : 13
RPAREN               : 23 24 25 26 27 46
SEMICOLON            : 1 2 5 6 19 25 26 27
TIMES                : 42
VAR                  : 5
VOID                 : 
WHILE                : 25
error                : 

Nonterminals, with rules where they appear

assign               : 14
body                 : 1 2 23 24 24 25
condition            : 15
cte                  : 49 50 52
cycle                : 16
empty                : 18
exp                  : 32 33 33 34 34 35 35 37 38
expression           : 19 23 24 25 28 29 46
factor               : 41 42 43
list_print_cte       : 27 31
list_print_expression : 26 29
list_vars            : 5 6 8
print                : 17
program              : 0
return_statement     : 12 13
return_vars          : 1 4
seen_assign_ID       : 19
seen_exp_PLUS_MINUS  : 37 38
seen_exp_quad_E      : 19
seen_exp_quad_P_M    : 37 38
seen_exp_quad_T_D    : 42 43
seen_factor_ID       : 47 48 51
seen_term_EQUAL      : 19
seen_term_TIMES_DIVIDE : 42 43
statement            : 11 12
term                 : 36 37 38 42 43
type                 : 5 6
vars                 : 3 4

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON return_vars MAIN body END
    (2) program -> . PROGRAM ID SEMICOLON MAIN body END

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON return_vars MAIN body END
    (2) program -> PROGRAM . ID SEMICOLON MAIN body END

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON return_vars MAIN body END
    (2) program -> PROGRAM ID . SEMICOLON MAIN body END

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . return_vars MAIN body END
    (2) program -> PROGRAM ID SEMICOLON . MAIN body END
    (3) return_vars -> . vars
    (4) return_vars -> . return_vars vars
    (5) vars -> . VAR list_vars COLON type SEMICOLON
    (6) vars -> . list_vars COLON type SEMICOLON
    (7) list_vars -> . ID
    (8) list_vars -> . list_vars COMMA ID

    MAIN            shift and go to state 7
    VAR             shift and go to state 9
    ID              shift and go to state 5

    return_vars                    shift and go to state 6
    vars                           shift and go to state 8
    list_vars                      shift and go to state 10

state 5

    (7) list_vars -> ID .

    COLON           reduce using rule 7 (list_vars -> ID .)
    COMMA           reduce using rule 7 (list_vars -> ID .)


state 6

    (1) program -> PROGRAM ID SEMICOLON return_vars . MAIN body END
    (4) return_vars -> return_vars . vars
    (5) vars -> . VAR list_vars COLON type SEMICOLON
    (6) vars -> . list_vars COLON type SEMICOLON
    (7) list_vars -> . ID
    (8) list_vars -> . list_vars COMMA ID

    MAIN            shift and go to state 11
    VAR             shift and go to state 9
    ID              shift and go to state 5

    vars                           shift and go to state 12
    list_vars                      shift and go to state 10

state 7

    (2) program -> PROGRAM ID SEMICOLON MAIN . body END
    (13) body -> . LBRACE return_statement RBRACE

    LBRACE          shift and go to state 14

    body                           shift and go to state 13

state 8

    (3) return_vars -> vars .

    MAIN            reduce using rule 3 (return_vars -> vars .)
    VAR             reduce using rule 3 (return_vars -> vars .)
    ID              reduce using rule 3 (return_vars -> vars .)


state 9

    (5) vars -> VAR . list_vars COLON type SEMICOLON
    (7) list_vars -> . ID
    (8) list_vars -> . list_vars COMMA ID

    ID              shift and go to state 5

    list_vars                      shift and go to state 15

state 10

    (6) vars -> list_vars . COLON type SEMICOLON
    (8) list_vars -> list_vars . COMMA ID

    COLON           shift and go to state 16
    COMMA           shift and go to state 17


state 11

    (1) program -> PROGRAM ID SEMICOLON return_vars MAIN . body END
    (13) body -> . LBRACE return_statement RBRACE

    LBRACE          shift and go to state 14

    body                           shift and go to state 18

state 12

    (4) return_vars -> return_vars vars .

    MAIN            reduce using rule 4 (return_vars -> return_vars vars .)
    VAR             reduce using rule 4 (return_vars -> return_vars vars .)
    ID              reduce using rule 4 (return_vars -> return_vars vars .)


state 13

    (2) program -> PROGRAM ID SEMICOLON MAIN body . END

    END             shift and go to state 19


state 14

    (13) body -> LBRACE . return_statement RBRACE
    (11) return_statement -> . statement
    (12) return_statement -> . return_statement statement
    (14) statement -> . assign
    (15) statement -> . condition
    (16) statement -> . cycle
    (17) statement -> . print
    (18) statement -> . empty
    (19) assign -> . ID seen_assign_ID EQUAL seen_term_EQUAL expression seen_exp_quad_E SEMICOLON
    (23) condition -> . IF LPAREN expression RPAREN body
    (24) condition -> . IF LPAREN expression RPAREN body ELSE body
    (25) cycle -> . DO body WHILE LPAREN expression RPAREN SEMICOLON
    (26) print -> . PRINT LPAREN list_print_expression RPAREN SEMICOLON
    (27) print -> . PRINT LPAREN list_print_cte RPAREN SEMICOLON
    (56) empty -> .

  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    ID              shift and go to state 27
    IF              shift and go to state 28
    DO              shift and go to state 29
    PRINT           shift and go to state 30
    RBRACE          reduce using rule 56 (empty -> .)

  ! ID              [ reduce using rule 56 (empty -> .) ]
  ! IF              [ reduce using rule 56 (empty -> .) ]
  ! DO              [ reduce using rule 56 (empty -> .) ]
  ! PRINT           [ reduce using rule 56 (empty -> .) ]

    return_statement               shift and go to state 20
    statement                      shift and go to state 21
    assign                         shift and go to state 22
    condition                      shift and go to state 23
    cycle                          shift and go to state 24
    print                          shift and go to state 25
    empty                          shift and go to state 26

state 15

    (5) vars -> VAR list_vars . COLON type SEMICOLON
    (8) list_vars -> list_vars . COMMA ID

    COLON           shift and go to state 31
    COMMA           shift and go to state 17


state 16

    (6) vars -> list_vars COLON . type SEMICOLON
    (9) type -> . INT
    (10) type -> . FLOAT

    INT             shift and go to state 33
    FLOAT           shift and go to state 34

    type                           shift and go to state 32

state 17

    (8) list_vars -> list_vars COMMA . ID

    ID              shift and go to state 35


state 18

    (1) program -> PROGRAM ID SEMICOLON return_vars MAIN body . END

    END             shift and go to state 36


state 19

    (2) program -> PROGRAM ID SEMICOLON MAIN body END .

    $end            reduce using rule 2 (program -> PROGRAM ID SEMICOLON MAIN body END .)


state 20

    (13) body -> LBRACE return_statement . RBRACE
    (12) return_statement -> return_statement . statement
    (14) statement -> . assign
    (15) statement -> . condition
    (16) statement -> . cycle
    (17) statement -> . print
    (18) statement -> . empty
    (19) assign -> . ID seen_assign_ID EQUAL seen_term_EQUAL expression seen_exp_quad_E SEMICOLON
    (23) condition -> . IF LPAREN expression RPAREN body
    (24) condition -> . IF LPAREN expression RPAREN body ELSE body
    (25) cycle -> . DO body WHILE LPAREN expression RPAREN SEMICOLON
    (26) print -> . PRINT LPAREN list_print_expression RPAREN SEMICOLON
    (27) print -> . PRINT LPAREN list_print_cte RPAREN SEMICOLON
    (56) empty -> .

  ! shift/reduce conflict for RBRACE resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for DO resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
    RBRACE          shift and go to state 37
    ID              shift and go to state 27
    IF              shift and go to state 28
    DO              shift and go to state 29
    PRINT           shift and go to state 30

  ! RBRACE          [ reduce using rule 56 (empty -> .) ]
  ! ID              [ reduce using rule 56 (empty -> .) ]
  ! IF              [ reduce using rule 56 (empty -> .) ]
  ! DO              [ reduce using rule 56 (empty -> .) ]
  ! PRINT           [ reduce using rule 56 (empty -> .) ]

    statement                      shift and go to state 38
    assign                         shift and go to state 22
    condition                      shift and go to state 23
    cycle                          shift and go to state 24
    print                          shift and go to state 25
    empty                          shift and go to state 26

state 21

    (11) return_statement -> statement .

    RBRACE          reduce using rule 11 (return_statement -> statement .)
    ID              reduce using rule 11 (return_statement -> statement .)
    IF              reduce using rule 11 (return_statement -> statement .)
    DO              reduce using rule 11 (return_statement -> statement .)
    PRINT           reduce using rule 11 (return_statement -> statement .)


state 22

    (14) statement -> assign .

    RBRACE          reduce using rule 14 (statement -> assign .)
    ID              reduce using rule 14 (statement -> assign .)
    IF              reduce using rule 14 (statement -> assign .)
    DO              reduce using rule 14 (statement -> assign .)
    PRINT           reduce using rule 14 (statement -> assign .)


state 23

    (15) statement -> condition .

    RBRACE          reduce using rule 15 (statement -> condition .)
    ID              reduce using rule 15 (statement -> condition .)
    IF              reduce using rule 15 (statement -> condition .)
    DO              reduce using rule 15 (statement -> condition .)
    PRINT           reduce using rule 15 (statement -> condition .)


state 24

    (16) statement -> cycle .

    RBRACE          reduce using rule 16 (statement -> cycle .)
    ID              reduce using rule 16 (statement -> cycle .)
    IF              reduce using rule 16 (statement -> cycle .)
    DO              reduce using rule 16 (statement -> cycle .)
    PRINT           reduce using rule 16 (statement -> cycle .)


state 25

    (17) statement -> print .

    RBRACE          reduce using rule 17 (statement -> print .)
    ID              reduce using rule 17 (statement -> print .)
    IF              reduce using rule 17 (statement -> print .)
    DO              reduce using rule 17 (statement -> print .)
    PRINT           reduce using rule 17 (statement -> print .)


state 26

    (18) statement -> empty .

    RBRACE          reduce using rule 18 (statement -> empty .)
    ID              reduce using rule 18 (statement -> empty .)
    IF              reduce using rule 18 (statement -> empty .)
    DO              reduce using rule 18 (statement -> empty .)
    PRINT           reduce using rule 18 (statement -> empty .)


state 27

    (19) assign -> ID . seen_assign_ID EQUAL seen_term_EQUAL expression seen_exp_quad_E SEMICOLON
    (20) seen_assign_ID -> .

    EQUAL           reduce using rule 20 (seen_assign_ID -> .)

    seen_assign_ID                 shift and go to state 39

state 28

    (23) condition -> IF . LPAREN expression RPAREN body
    (24) condition -> IF . LPAREN expression RPAREN body ELSE body

    LPAREN          shift and go to state 40


state 29

    (25) cycle -> DO . body WHILE LPAREN expression RPAREN SEMICOLON
    (13) body -> . LBRACE return_statement RBRACE

    LBRACE          shift and go to state 14

    body                           shift and go to state 41

state 30

    (26) print -> PRINT . LPAREN list_print_expression RPAREN SEMICOLON
    (27) print -> PRINT . LPAREN list_print_cte RPAREN SEMICOLON

    LPAREN          shift and go to state 42


state 31

    (5) vars -> VAR list_vars COLON . type SEMICOLON
    (9) type -> . INT
    (10) type -> . FLOAT

    INT             shift and go to state 33
    FLOAT           shift and go to state 34

    type                           shift and go to state 43

state 32

    (6) vars -> list_vars COLON type . SEMICOLON

    SEMICOLON       shift and go to state 44


state 33

    (9) type -> INT .

    SEMICOLON       reduce using rule 9 (type -> INT .)


state 34

    (10) type -> FLOAT .

    SEMICOLON       reduce using rule 10 (type -> FLOAT .)


state 35

    (8) list_vars -> list_vars COMMA ID .

    COLON           reduce using rule 8 (list_vars -> list_vars COMMA ID .)
    COMMA           reduce using rule 8 (list_vars -> list_vars COMMA ID .)


state 36

    (1) program -> PROGRAM ID SEMICOLON return_vars MAIN body END .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON return_vars MAIN body END .)


state 37

    (13) body -> LBRACE return_statement RBRACE .

    END             reduce using rule 13 (body -> LBRACE return_statement RBRACE .)
    WHILE           reduce using rule 13 (body -> LBRACE return_statement RBRACE .)
    ELSE            reduce using rule 13 (body -> LBRACE return_statement RBRACE .)
    RBRACE          reduce using rule 13 (body -> LBRACE return_statement RBRACE .)
    ID              reduce using rule 13 (body -> LBRACE return_statement RBRACE .)
    IF              reduce using rule 13 (body -> LBRACE return_statement RBRACE .)
    DO              reduce using rule 13 (body -> LBRACE return_statement RBRACE .)
    PRINT           reduce using rule 13 (body -> LBRACE return_statement RBRACE .)


state 38

    (12) return_statement -> return_statement statement .

    RBRACE          reduce using rule 12 (return_statement -> return_statement statement .)
    ID              reduce using rule 12 (return_statement -> return_statement statement .)
    IF              reduce using rule 12 (return_statement -> return_statement statement .)
    DO              reduce using rule 12 (return_statement -> return_statement statement .)
    PRINT           reduce using rule 12 (return_statement -> return_statement statement .)


state 39

    (19) assign -> ID seen_assign_ID . EQUAL seen_term_EQUAL expression seen_exp_quad_E SEMICOLON

    EQUAL           shift and go to state 45


state 40

    (23) condition -> IF LPAREN . expression RPAREN body
    (24) condition -> IF LPAREN . expression RPAREN body ELSE body
    (32) expression -> . exp
    (33) expression -> . exp GT exp
    (34) expression -> . exp LT exp
    (35) expression -> . exp NE exp
    (36) exp -> . term
    (37) exp -> . exp PLUS seen_exp_PLUS_MINUS term seen_exp_quad_P_M
    (38) exp -> . exp MINUS seen_exp_PLUS_MINUS term seen_exp_quad_P_M
    (41) term -> . factor
    (42) term -> . term TIMES seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D
    (43) term -> . term DIVIDE seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D
    (46) factor -> . LPAREN expression RPAREN
    (47) factor -> . PLUS ID seen_factor_ID
    (48) factor -> . MINUS ID seen_factor_ID
    (49) factor -> . PLUS cte
    (50) factor -> . MINUS cte
    (51) factor -> . ID seen_factor_ID
    (52) factor -> . cte
    (54) cte -> . CTE_INT
    (55) cte -> . CTE_FLOAT

    LPAREN          shift and go to state 46
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    ID              shift and go to state 53
    CTE_INT         shift and go to state 55
    CTE_FLOAT       shift and go to state 56

    expression                     shift and go to state 47
    exp                            shift and go to state 48
    term                           shift and go to state 49
    factor                         shift and go to state 52
    cte                            shift and go to state 54

state 41

    (25) cycle -> DO body . WHILE LPAREN expression RPAREN SEMICOLON

    WHILE           shift and go to state 57


state 42

    (26) print -> PRINT LPAREN . list_print_expression RPAREN SEMICOLON
    (27) print -> PRINT LPAREN . list_print_cte RPAREN SEMICOLON
    (28) list_print_expression -> . expression
    (29) list_print_expression -> . list_print_expression COMMA expression
    (30) list_print_cte -> . CTE_STRING
    (31) list_print_cte -> . list_print_cte COMMA CTE_STRING
    (32) expression -> . exp
    (33) expression -> . exp GT exp
    (34) expression -> . exp LT exp
    (35) expression -> . exp NE exp
    (36) exp -> . term
    (37) exp -> . exp PLUS seen_exp_PLUS_MINUS term seen_exp_quad_P_M
    (38) exp -> . exp MINUS seen_exp_PLUS_MINUS term seen_exp_quad_P_M
    (41) term -> . factor
    (42) term -> . term TIMES seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D
    (43) term -> . term DIVIDE seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D
    (46) factor -> . LPAREN expression RPAREN
    (47) factor -> . PLUS ID seen_factor_ID
    (48) factor -> . MINUS ID seen_factor_ID
    (49) factor -> . PLUS cte
    (50) factor -> . MINUS cte
    (51) factor -> . ID seen_factor_ID
    (52) factor -> . cte
    (54) cte -> . CTE_INT
    (55) cte -> . CTE_FLOAT

    CTE_STRING      shift and go to state 61
    LPAREN          shift and go to state 46
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    ID              shift and go to state 53
    CTE_INT         shift and go to state 55
    CTE_FLOAT       shift and go to state 56

    list_print_expression          shift and go to state 58
    list_print_cte                 shift and go to state 59
    expression                     shift and go to state 60
    exp                            shift and go to state 48
    term                           shift and go to state 49
    factor                         shift and go to state 52
    cte                            shift and go to state 54

state 43

    (5) vars -> VAR list_vars COLON type . SEMICOLON

    SEMICOLON       shift and go to state 62


state 44

    (6) vars -> list_vars COLON type SEMICOLON .

    MAIN            reduce using rule 6 (vars -> list_vars COLON type SEMICOLON .)
    VAR             reduce using rule 6 (vars -> list_vars COLON type SEMICOLON .)
    ID              reduce using rule 6 (vars -> list_vars COLON type SEMICOLON .)


state 45

    (19) assign -> ID seen_assign_ID EQUAL . seen_term_EQUAL expression seen_exp_quad_E SEMICOLON
    (21) seen_term_EQUAL -> .

    LPAREN          reduce using rule 21 (seen_term_EQUAL -> .)
    PLUS            reduce using rule 21 (seen_term_EQUAL -> .)
    MINUS           reduce using rule 21 (seen_term_EQUAL -> .)
    ID              reduce using rule 21 (seen_term_EQUAL -> .)
    CTE_INT         reduce using rule 21 (seen_term_EQUAL -> .)
    CTE_FLOAT       reduce using rule 21 (seen_term_EQUAL -> .)

    seen_term_EQUAL                shift and go to state 63

state 46

    (46) factor -> LPAREN . expression RPAREN
    (32) expression -> . exp
    (33) expression -> . exp GT exp
    (34) expression -> . exp LT exp
    (35) expression -> . exp NE exp
    (36) exp -> . term
    (37) exp -> . exp PLUS seen_exp_PLUS_MINUS term seen_exp_quad_P_M
    (38) exp -> . exp MINUS seen_exp_PLUS_MINUS term seen_exp_quad_P_M
    (41) term -> . factor
    (42) term -> . term TIMES seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D
    (43) term -> . term DIVIDE seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D
    (46) factor -> . LPAREN expression RPAREN
    (47) factor -> . PLUS ID seen_factor_ID
    (48) factor -> . MINUS ID seen_factor_ID
    (49) factor -> . PLUS cte
    (50) factor -> . MINUS cte
    (51) factor -> . ID seen_factor_ID
    (52) factor -> . cte
    (54) cte -> . CTE_INT
    (55) cte -> . CTE_FLOAT

    LPAREN          shift and go to state 46
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    ID              shift and go to state 53
    CTE_INT         shift and go to state 55
    CTE_FLOAT       shift and go to state 56

    expression                     shift and go to state 64
    exp                            shift and go to state 48
    term                           shift and go to state 49
    factor                         shift and go to state 52
    cte                            shift and go to state 54

state 47

    (23) condition -> IF LPAREN expression . RPAREN body
    (24) condition -> IF LPAREN expression . RPAREN body ELSE body

    RPAREN          shift and go to state 65


state 48

    (32) expression -> exp .
    (33) expression -> exp . GT exp
    (34) expression -> exp . LT exp
    (35) expression -> exp . NE exp
    (37) exp -> exp . PLUS seen_exp_PLUS_MINUS term seen_exp_quad_P_M
    (38) exp -> exp . MINUS seen_exp_PLUS_MINUS term seen_exp_quad_P_M

    RPAREN          reduce using rule 32 (expression -> exp .)
    COMMA           reduce using rule 32 (expression -> exp .)
    SEMICOLON       reduce using rule 32 (expression -> exp .)
    GT              shift and go to state 66
    LT              shift and go to state 67
    NE              shift and go to state 68
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70


state 49

    (36) exp -> term .
    (42) term -> term . TIMES seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D
    (43) term -> term . DIVIDE seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D

    GT              reduce using rule 36 (exp -> term .)
    LT              reduce using rule 36 (exp -> term .)
    NE              reduce using rule 36 (exp -> term .)
    PLUS            reduce using rule 36 (exp -> term .)
    MINUS           reduce using rule 36 (exp -> term .)
    RPAREN          reduce using rule 36 (exp -> term .)
    COMMA           reduce using rule 36 (exp -> term .)
    SEMICOLON       reduce using rule 36 (exp -> term .)
    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72


state 50

    (47) factor -> PLUS . ID seen_factor_ID
    (49) factor -> PLUS . cte
    (54) cte -> . CTE_INT
    (55) cte -> . CTE_FLOAT

    ID              shift and go to state 73
    CTE_INT         shift and go to state 55
    CTE_FLOAT       shift and go to state 56

    cte                            shift and go to state 74

state 51

    (48) factor -> MINUS . ID seen_factor_ID
    (50) factor -> MINUS . cte
    (54) cte -> . CTE_INT
    (55) cte -> . CTE_FLOAT

    ID              shift and go to state 75
    CTE_INT         shift and go to state 55
    CTE_FLOAT       shift and go to state 56

    cte                            shift and go to state 76

state 52

    (41) term -> factor .

    TIMES           reduce using rule 41 (term -> factor .)
    DIVIDE          reduce using rule 41 (term -> factor .)
    GT              reduce using rule 41 (term -> factor .)
    LT              reduce using rule 41 (term -> factor .)
    NE              reduce using rule 41 (term -> factor .)
    PLUS            reduce using rule 41 (term -> factor .)
    MINUS           reduce using rule 41 (term -> factor .)
    RPAREN          reduce using rule 41 (term -> factor .)
    COMMA           reduce using rule 41 (term -> factor .)
    SEMICOLON       reduce using rule 41 (term -> factor .)


state 53

    (51) factor -> ID . seen_factor_ID
    (53) seen_factor_ID -> .

    TIMES           reduce using rule 53 (seen_factor_ID -> .)
    DIVIDE          reduce using rule 53 (seen_factor_ID -> .)
    GT              reduce using rule 53 (seen_factor_ID -> .)
    LT              reduce using rule 53 (seen_factor_ID -> .)
    NE              reduce using rule 53 (seen_factor_ID -> .)
    PLUS            reduce using rule 53 (seen_factor_ID -> .)
    MINUS           reduce using rule 53 (seen_factor_ID -> .)
    RPAREN          reduce using rule 53 (seen_factor_ID -> .)
    COMMA           reduce using rule 53 (seen_factor_ID -> .)
    SEMICOLON       reduce using rule 53 (seen_factor_ID -> .)

    seen_factor_ID                 shift and go to state 77

state 54

    (52) factor -> cte .

    TIMES           reduce using rule 52 (factor -> cte .)
    DIVIDE          reduce using rule 52 (factor -> cte .)
    GT              reduce using rule 52 (factor -> cte .)
    LT              reduce using rule 52 (factor -> cte .)
    NE              reduce using rule 52 (factor -> cte .)
    PLUS            reduce using rule 52 (factor -> cte .)
    MINUS           reduce using rule 52 (factor -> cte .)
    RPAREN          reduce using rule 52 (factor -> cte .)
    COMMA           reduce using rule 52 (factor -> cte .)
    SEMICOLON       reduce using rule 52 (factor -> cte .)


state 55

    (54) cte -> CTE_INT .

    TIMES           reduce using rule 54 (cte -> CTE_INT .)
    DIVIDE          reduce using rule 54 (cte -> CTE_INT .)
    GT              reduce using rule 54 (cte -> CTE_INT .)
    LT              reduce using rule 54 (cte -> CTE_INT .)
    NE              reduce using rule 54 (cte -> CTE_INT .)
    PLUS            reduce using rule 54 (cte -> CTE_INT .)
    MINUS           reduce using rule 54 (cte -> CTE_INT .)
    RPAREN          reduce using rule 54 (cte -> CTE_INT .)
    COMMA           reduce using rule 54 (cte -> CTE_INT .)
    SEMICOLON       reduce using rule 54 (cte -> CTE_INT .)


state 56

    (55) cte -> CTE_FLOAT .

    TIMES           reduce using rule 55 (cte -> CTE_FLOAT .)
    DIVIDE          reduce using rule 55 (cte -> CTE_FLOAT .)
    GT              reduce using rule 55 (cte -> CTE_FLOAT .)
    LT              reduce using rule 55 (cte -> CTE_FLOAT .)
    NE              reduce using rule 55 (cte -> CTE_FLOAT .)
    PLUS            reduce using rule 55 (cte -> CTE_FLOAT .)
    MINUS           reduce using rule 55 (cte -> CTE_FLOAT .)
    RPAREN          reduce using rule 55 (cte -> CTE_FLOAT .)
    COMMA           reduce using rule 55 (cte -> CTE_FLOAT .)
    SEMICOLON       reduce using rule 55 (cte -> CTE_FLOAT .)


state 57

    (25) cycle -> DO body WHILE . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 78


state 58

    (26) print -> PRINT LPAREN list_print_expression . RPAREN SEMICOLON
    (29) list_print_expression -> list_print_expression . COMMA expression

    RPAREN          shift and go to state 79
    COMMA           shift and go to state 80


state 59

    (27) print -> PRINT LPAREN list_print_cte . RPAREN SEMICOLON
    (31) list_print_cte -> list_print_cte . COMMA CTE_STRING

    RPAREN          shift and go to state 81
    COMMA           shift and go to state 82


state 60

    (28) list_print_expression -> expression .

    RPAREN          reduce using rule 28 (list_print_expression -> expression .)
    COMMA           reduce using rule 28 (list_print_expression -> expression .)


state 61

    (30) list_print_cte -> CTE_STRING .

    RPAREN          reduce using rule 30 (list_print_cte -> CTE_STRING .)
    COMMA           reduce using rule 30 (list_print_cte -> CTE_STRING .)


state 62

    (5) vars -> VAR list_vars COLON type SEMICOLON .

    MAIN            reduce using rule 5 (vars -> VAR list_vars COLON type SEMICOLON .)
    VAR             reduce using rule 5 (vars -> VAR list_vars COLON type SEMICOLON .)
    ID              reduce using rule 5 (vars -> VAR list_vars COLON type SEMICOLON .)


state 63

    (19) assign -> ID seen_assign_ID EQUAL seen_term_EQUAL . expression seen_exp_quad_E SEMICOLON
    (32) expression -> . exp
    (33) expression -> . exp GT exp
    (34) expression -> . exp LT exp
    (35) expression -> . exp NE exp
    (36) exp -> . term
    (37) exp -> . exp PLUS seen_exp_PLUS_MINUS term seen_exp_quad_P_M
    (38) exp -> . exp MINUS seen_exp_PLUS_MINUS term seen_exp_quad_P_M
    (41) term -> . factor
    (42) term -> . term TIMES seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D
    (43) term -> . term DIVIDE seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D
    (46) factor -> . LPAREN expression RPAREN
    (47) factor -> . PLUS ID seen_factor_ID
    (48) factor -> . MINUS ID seen_factor_ID
    (49) factor -> . PLUS cte
    (50) factor -> . MINUS cte
    (51) factor -> . ID seen_factor_ID
    (52) factor -> . cte
    (54) cte -> . CTE_INT
    (55) cte -> . CTE_FLOAT

    LPAREN          shift and go to state 46
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    ID              shift and go to state 53
    CTE_INT         shift and go to state 55
    CTE_FLOAT       shift and go to state 56

    expression                     shift and go to state 83
    exp                            shift and go to state 48
    term                           shift and go to state 49
    factor                         shift and go to state 52
    cte                            shift and go to state 54

state 64

    (46) factor -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 84


state 65

    (23) condition -> IF LPAREN expression RPAREN . body
    (24) condition -> IF LPAREN expression RPAREN . body ELSE body
    (13) body -> . LBRACE return_statement RBRACE

    LBRACE          shift and go to state 14

    body                           shift and go to state 85

state 66

    (33) expression -> exp GT . exp
    (36) exp -> . term
    (37) exp -> . exp PLUS seen_exp_PLUS_MINUS term seen_exp_quad_P_M
    (38) exp -> . exp MINUS seen_exp_PLUS_MINUS term seen_exp_quad_P_M
    (41) term -> . factor
    (42) term -> . term TIMES seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D
    (43) term -> . term DIVIDE seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D
    (46) factor -> . LPAREN expression RPAREN
    (47) factor -> . PLUS ID seen_factor_ID
    (48) factor -> . MINUS ID seen_factor_ID
    (49) factor -> . PLUS cte
    (50) factor -> . MINUS cte
    (51) factor -> . ID seen_factor_ID
    (52) factor -> . cte
    (54) cte -> . CTE_INT
    (55) cte -> . CTE_FLOAT

    LPAREN          shift and go to state 46
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    ID              shift and go to state 53
    CTE_INT         shift and go to state 55
    CTE_FLOAT       shift and go to state 56

    exp                            shift and go to state 86
    term                           shift and go to state 49
    factor                         shift and go to state 52
    cte                            shift and go to state 54

state 67

    (34) expression -> exp LT . exp
    (36) exp -> . term
    (37) exp -> . exp PLUS seen_exp_PLUS_MINUS term seen_exp_quad_P_M
    (38) exp -> . exp MINUS seen_exp_PLUS_MINUS term seen_exp_quad_P_M
    (41) term -> . factor
    (42) term -> . term TIMES seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D
    (43) term -> . term DIVIDE seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D
    (46) factor -> . LPAREN expression RPAREN
    (47) factor -> . PLUS ID seen_factor_ID
    (48) factor -> . MINUS ID seen_factor_ID
    (49) factor -> . PLUS cte
    (50) factor -> . MINUS cte
    (51) factor -> . ID seen_factor_ID
    (52) factor -> . cte
    (54) cte -> . CTE_INT
    (55) cte -> . CTE_FLOAT

    LPAREN          shift and go to state 46
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    ID              shift and go to state 53
    CTE_INT         shift and go to state 55
    CTE_FLOAT       shift and go to state 56

    exp                            shift and go to state 87
    term                           shift and go to state 49
    factor                         shift and go to state 52
    cte                            shift and go to state 54

state 68

    (35) expression -> exp NE . exp
    (36) exp -> . term
    (37) exp -> . exp PLUS seen_exp_PLUS_MINUS term seen_exp_quad_P_M
    (38) exp -> . exp MINUS seen_exp_PLUS_MINUS term seen_exp_quad_P_M
    (41) term -> . factor
    (42) term -> . term TIMES seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D
    (43) term -> . term DIVIDE seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D
    (46) factor -> . LPAREN expression RPAREN
    (47) factor -> . PLUS ID seen_factor_ID
    (48) factor -> . MINUS ID seen_factor_ID
    (49) factor -> . PLUS cte
    (50) factor -> . MINUS cte
    (51) factor -> . ID seen_factor_ID
    (52) factor -> . cte
    (54) cte -> . CTE_INT
    (55) cte -> . CTE_FLOAT

    LPAREN          shift and go to state 46
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    ID              shift and go to state 53
    CTE_INT         shift and go to state 55
    CTE_FLOAT       shift and go to state 56

    exp                            shift and go to state 88
    term                           shift and go to state 49
    factor                         shift and go to state 52
    cte                            shift and go to state 54

state 69

    (37) exp -> exp PLUS . seen_exp_PLUS_MINUS term seen_exp_quad_P_M
    (39) seen_exp_PLUS_MINUS -> .

    LPAREN          reduce using rule 39 (seen_exp_PLUS_MINUS -> .)
    PLUS            reduce using rule 39 (seen_exp_PLUS_MINUS -> .)
    MINUS           reduce using rule 39 (seen_exp_PLUS_MINUS -> .)
    ID              reduce using rule 39 (seen_exp_PLUS_MINUS -> .)
    CTE_INT         reduce using rule 39 (seen_exp_PLUS_MINUS -> .)
    CTE_FLOAT       reduce using rule 39 (seen_exp_PLUS_MINUS -> .)

    seen_exp_PLUS_MINUS            shift and go to state 89

state 70

    (38) exp -> exp MINUS . seen_exp_PLUS_MINUS term seen_exp_quad_P_M
    (39) seen_exp_PLUS_MINUS -> .

    LPAREN          reduce using rule 39 (seen_exp_PLUS_MINUS -> .)
    PLUS            reduce using rule 39 (seen_exp_PLUS_MINUS -> .)
    MINUS           reduce using rule 39 (seen_exp_PLUS_MINUS -> .)
    ID              reduce using rule 39 (seen_exp_PLUS_MINUS -> .)
    CTE_INT         reduce using rule 39 (seen_exp_PLUS_MINUS -> .)
    CTE_FLOAT       reduce using rule 39 (seen_exp_PLUS_MINUS -> .)

    seen_exp_PLUS_MINUS            shift and go to state 90

state 71

    (42) term -> term TIMES . seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D
    (44) seen_term_TIMES_DIVIDE -> .

    LPAREN          reduce using rule 44 (seen_term_TIMES_DIVIDE -> .)
    PLUS            reduce using rule 44 (seen_term_TIMES_DIVIDE -> .)
    MINUS           reduce using rule 44 (seen_term_TIMES_DIVIDE -> .)
    ID              reduce using rule 44 (seen_term_TIMES_DIVIDE -> .)
    CTE_INT         reduce using rule 44 (seen_term_TIMES_DIVIDE -> .)
    CTE_FLOAT       reduce using rule 44 (seen_term_TIMES_DIVIDE -> .)

    seen_term_TIMES_DIVIDE         shift and go to state 91

state 72

    (43) term -> term DIVIDE . seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D
    (44) seen_term_TIMES_DIVIDE -> .

    LPAREN          reduce using rule 44 (seen_term_TIMES_DIVIDE -> .)
    PLUS            reduce using rule 44 (seen_term_TIMES_DIVIDE -> .)
    MINUS           reduce using rule 44 (seen_term_TIMES_DIVIDE -> .)
    ID              reduce using rule 44 (seen_term_TIMES_DIVIDE -> .)
    CTE_INT         reduce using rule 44 (seen_term_TIMES_DIVIDE -> .)
    CTE_FLOAT       reduce using rule 44 (seen_term_TIMES_DIVIDE -> .)

    seen_term_TIMES_DIVIDE         shift and go to state 92

state 73

    (47) factor -> PLUS ID . seen_factor_ID
    (53) seen_factor_ID -> .

    TIMES           reduce using rule 53 (seen_factor_ID -> .)
    DIVIDE          reduce using rule 53 (seen_factor_ID -> .)
    GT              reduce using rule 53 (seen_factor_ID -> .)
    LT              reduce using rule 53 (seen_factor_ID -> .)
    NE              reduce using rule 53 (seen_factor_ID -> .)
    PLUS            reduce using rule 53 (seen_factor_ID -> .)
    MINUS           reduce using rule 53 (seen_factor_ID -> .)
    RPAREN          reduce using rule 53 (seen_factor_ID -> .)
    COMMA           reduce using rule 53 (seen_factor_ID -> .)
    SEMICOLON       reduce using rule 53 (seen_factor_ID -> .)

    seen_factor_ID                 shift and go to state 93

state 74

    (49) factor -> PLUS cte .

    TIMES           reduce using rule 49 (factor -> PLUS cte .)
    DIVIDE          reduce using rule 49 (factor -> PLUS cte .)
    GT              reduce using rule 49 (factor -> PLUS cte .)
    LT              reduce using rule 49 (factor -> PLUS cte .)
    NE              reduce using rule 49 (factor -> PLUS cte .)
    PLUS            reduce using rule 49 (factor -> PLUS cte .)
    MINUS           reduce using rule 49 (factor -> PLUS cte .)
    RPAREN          reduce using rule 49 (factor -> PLUS cte .)
    COMMA           reduce using rule 49 (factor -> PLUS cte .)
    SEMICOLON       reduce using rule 49 (factor -> PLUS cte .)


state 75

    (48) factor -> MINUS ID . seen_factor_ID
    (53) seen_factor_ID -> .

    TIMES           reduce using rule 53 (seen_factor_ID -> .)
    DIVIDE          reduce using rule 53 (seen_factor_ID -> .)
    GT              reduce using rule 53 (seen_factor_ID -> .)
    LT              reduce using rule 53 (seen_factor_ID -> .)
    NE              reduce using rule 53 (seen_factor_ID -> .)
    PLUS            reduce using rule 53 (seen_factor_ID -> .)
    MINUS           reduce using rule 53 (seen_factor_ID -> .)
    RPAREN          reduce using rule 53 (seen_factor_ID -> .)
    COMMA           reduce using rule 53 (seen_factor_ID -> .)
    SEMICOLON       reduce using rule 53 (seen_factor_ID -> .)

    seen_factor_ID                 shift and go to state 94

state 76

    (50) factor -> MINUS cte .

    TIMES           reduce using rule 50 (factor -> MINUS cte .)
    DIVIDE          reduce using rule 50 (factor -> MINUS cte .)
    GT              reduce using rule 50 (factor -> MINUS cte .)
    LT              reduce using rule 50 (factor -> MINUS cte .)
    NE              reduce using rule 50 (factor -> MINUS cte .)
    PLUS            reduce using rule 50 (factor -> MINUS cte .)
    MINUS           reduce using rule 50 (factor -> MINUS cte .)
    RPAREN          reduce using rule 50 (factor -> MINUS cte .)
    COMMA           reduce using rule 50 (factor -> MINUS cte .)
    SEMICOLON       reduce using rule 50 (factor -> MINUS cte .)


state 77

    (51) factor -> ID seen_factor_ID .

    TIMES           reduce using rule 51 (factor -> ID seen_factor_ID .)
    DIVIDE          reduce using rule 51 (factor -> ID seen_factor_ID .)
    GT              reduce using rule 51 (factor -> ID seen_factor_ID .)
    LT              reduce using rule 51 (factor -> ID seen_factor_ID .)
    NE              reduce using rule 51 (factor -> ID seen_factor_ID .)
    PLUS            reduce using rule 51 (factor -> ID seen_factor_ID .)
    MINUS           reduce using rule 51 (factor -> ID seen_factor_ID .)
    RPAREN          reduce using rule 51 (factor -> ID seen_factor_ID .)
    COMMA           reduce using rule 51 (factor -> ID seen_factor_ID .)
    SEMICOLON       reduce using rule 51 (factor -> ID seen_factor_ID .)


state 78

    (25) cycle -> DO body WHILE LPAREN . expression RPAREN SEMICOLON
    (32) expression -> . exp
    (33) expression -> . exp GT exp
    (34) expression -> . exp LT exp
    (35) expression -> . exp NE exp
    (36) exp -> . term
    (37) exp -> . exp PLUS seen_exp_PLUS_MINUS term seen_exp_quad_P_M
    (38) exp -> . exp MINUS seen_exp_PLUS_MINUS term seen_exp_quad_P_M
    (41) term -> . factor
    (42) term -> . term TIMES seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D
    (43) term -> . term DIVIDE seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D
    (46) factor -> . LPAREN expression RPAREN
    (47) factor -> . PLUS ID seen_factor_ID
    (48) factor -> . MINUS ID seen_factor_ID
    (49) factor -> . PLUS cte
    (50) factor -> . MINUS cte
    (51) factor -> . ID seen_factor_ID
    (52) factor -> . cte
    (54) cte -> . CTE_INT
    (55) cte -> . CTE_FLOAT

    LPAREN          shift and go to state 46
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    ID              shift and go to state 53
    CTE_INT         shift and go to state 55
    CTE_FLOAT       shift and go to state 56

    expression                     shift and go to state 95
    exp                            shift and go to state 48
    term                           shift and go to state 49
    factor                         shift and go to state 52
    cte                            shift and go to state 54

state 79

    (26) print -> PRINT LPAREN list_print_expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 96


state 80

    (29) list_print_expression -> list_print_expression COMMA . expression
    (32) expression -> . exp
    (33) expression -> . exp GT exp
    (34) expression -> . exp LT exp
    (35) expression -> . exp NE exp
    (36) exp -> . term
    (37) exp -> . exp PLUS seen_exp_PLUS_MINUS term seen_exp_quad_P_M
    (38) exp -> . exp MINUS seen_exp_PLUS_MINUS term seen_exp_quad_P_M
    (41) term -> . factor
    (42) term -> . term TIMES seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D
    (43) term -> . term DIVIDE seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D
    (46) factor -> . LPAREN expression RPAREN
    (47) factor -> . PLUS ID seen_factor_ID
    (48) factor -> . MINUS ID seen_factor_ID
    (49) factor -> . PLUS cte
    (50) factor -> . MINUS cte
    (51) factor -> . ID seen_factor_ID
    (52) factor -> . cte
    (54) cte -> . CTE_INT
    (55) cte -> . CTE_FLOAT

    LPAREN          shift and go to state 46
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    ID              shift and go to state 53
    CTE_INT         shift and go to state 55
    CTE_FLOAT       shift and go to state 56

    expression                     shift and go to state 97
    exp                            shift and go to state 48
    term                           shift and go to state 49
    factor                         shift and go to state 52
    cte                            shift and go to state 54

state 81

    (27) print -> PRINT LPAREN list_print_cte RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 98


state 82

    (31) list_print_cte -> list_print_cte COMMA . CTE_STRING

    CTE_STRING      shift and go to state 99


state 83

    (19) assign -> ID seen_assign_ID EQUAL seen_term_EQUAL expression . seen_exp_quad_E SEMICOLON
    (22) seen_exp_quad_E -> .

    SEMICOLON       reduce using rule 22 (seen_exp_quad_E -> .)

    seen_exp_quad_E                shift and go to state 100

state 84

    (46) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 46 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 46 (factor -> LPAREN expression RPAREN .)
    GT              reduce using rule 46 (factor -> LPAREN expression RPAREN .)
    LT              reduce using rule 46 (factor -> LPAREN expression RPAREN .)
    NE              reduce using rule 46 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 46 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 46 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 46 (factor -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 46 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 46 (factor -> LPAREN expression RPAREN .)


state 85

    (23) condition -> IF LPAREN expression RPAREN body .
    (24) condition -> IF LPAREN expression RPAREN body . ELSE body

    RBRACE          reduce using rule 23 (condition -> IF LPAREN expression RPAREN body .)
    ID              reduce using rule 23 (condition -> IF LPAREN expression RPAREN body .)
    IF              reduce using rule 23 (condition -> IF LPAREN expression RPAREN body .)
    DO              reduce using rule 23 (condition -> IF LPAREN expression RPAREN body .)
    PRINT           reduce using rule 23 (condition -> IF LPAREN expression RPAREN body .)
    ELSE            shift and go to state 101


state 86

    (33) expression -> exp GT exp .
    (37) exp -> exp . PLUS seen_exp_PLUS_MINUS term seen_exp_quad_P_M
    (38) exp -> exp . MINUS seen_exp_PLUS_MINUS term seen_exp_quad_P_M

    RPAREN          reduce using rule 33 (expression -> exp GT exp .)
    COMMA           reduce using rule 33 (expression -> exp GT exp .)
    SEMICOLON       reduce using rule 33 (expression -> exp GT exp .)
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70


state 87

    (34) expression -> exp LT exp .
    (37) exp -> exp . PLUS seen_exp_PLUS_MINUS term seen_exp_quad_P_M
    (38) exp -> exp . MINUS seen_exp_PLUS_MINUS term seen_exp_quad_P_M

    RPAREN          reduce using rule 34 (expression -> exp LT exp .)
    COMMA           reduce using rule 34 (expression -> exp LT exp .)
    SEMICOLON       reduce using rule 34 (expression -> exp LT exp .)
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70


state 88

    (35) expression -> exp NE exp .
    (37) exp -> exp . PLUS seen_exp_PLUS_MINUS term seen_exp_quad_P_M
    (38) exp -> exp . MINUS seen_exp_PLUS_MINUS term seen_exp_quad_P_M

    RPAREN          reduce using rule 35 (expression -> exp NE exp .)
    COMMA           reduce using rule 35 (expression -> exp NE exp .)
    SEMICOLON       reduce using rule 35 (expression -> exp NE exp .)
    PLUS            shift and go to state 69
    MINUS           shift and go to state 70


state 89

    (37) exp -> exp PLUS seen_exp_PLUS_MINUS . term seen_exp_quad_P_M
    (41) term -> . factor
    (42) term -> . term TIMES seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D
    (43) term -> . term DIVIDE seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D
    (46) factor -> . LPAREN expression RPAREN
    (47) factor -> . PLUS ID seen_factor_ID
    (48) factor -> . MINUS ID seen_factor_ID
    (49) factor -> . PLUS cte
    (50) factor -> . MINUS cte
    (51) factor -> . ID seen_factor_ID
    (52) factor -> . cte
    (54) cte -> . CTE_INT
    (55) cte -> . CTE_FLOAT

    LPAREN          shift and go to state 46
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    ID              shift and go to state 53
    CTE_INT         shift and go to state 55
    CTE_FLOAT       shift and go to state 56

    term                           shift and go to state 102
    factor                         shift and go to state 52
    cte                            shift and go to state 54

state 90

    (38) exp -> exp MINUS seen_exp_PLUS_MINUS . term seen_exp_quad_P_M
    (41) term -> . factor
    (42) term -> . term TIMES seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D
    (43) term -> . term DIVIDE seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D
    (46) factor -> . LPAREN expression RPAREN
    (47) factor -> . PLUS ID seen_factor_ID
    (48) factor -> . MINUS ID seen_factor_ID
    (49) factor -> . PLUS cte
    (50) factor -> . MINUS cte
    (51) factor -> . ID seen_factor_ID
    (52) factor -> . cte
    (54) cte -> . CTE_INT
    (55) cte -> . CTE_FLOAT

    LPAREN          shift and go to state 46
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    ID              shift and go to state 53
    CTE_INT         shift and go to state 55
    CTE_FLOAT       shift and go to state 56

    term                           shift and go to state 103
    factor                         shift and go to state 52
    cte                            shift and go to state 54

state 91

    (42) term -> term TIMES seen_term_TIMES_DIVIDE . factor seen_exp_quad_T_D
    (46) factor -> . LPAREN expression RPAREN
    (47) factor -> . PLUS ID seen_factor_ID
    (48) factor -> . MINUS ID seen_factor_ID
    (49) factor -> . PLUS cte
    (50) factor -> . MINUS cte
    (51) factor -> . ID seen_factor_ID
    (52) factor -> . cte
    (54) cte -> . CTE_INT
    (55) cte -> . CTE_FLOAT

    LPAREN          shift and go to state 46
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    ID              shift and go to state 53
    CTE_INT         shift and go to state 55
    CTE_FLOAT       shift and go to state 56

    factor                         shift and go to state 104
    cte                            shift and go to state 54

state 92

    (43) term -> term DIVIDE seen_term_TIMES_DIVIDE . factor seen_exp_quad_T_D
    (46) factor -> . LPAREN expression RPAREN
    (47) factor -> . PLUS ID seen_factor_ID
    (48) factor -> . MINUS ID seen_factor_ID
    (49) factor -> . PLUS cte
    (50) factor -> . MINUS cte
    (51) factor -> . ID seen_factor_ID
    (52) factor -> . cte
    (54) cte -> . CTE_INT
    (55) cte -> . CTE_FLOAT

    LPAREN          shift and go to state 46
    PLUS            shift and go to state 50
    MINUS           shift and go to state 51
    ID              shift and go to state 53
    CTE_INT         shift and go to state 55
    CTE_FLOAT       shift and go to state 56

    factor                         shift and go to state 105
    cte                            shift and go to state 54

state 93

    (47) factor -> PLUS ID seen_factor_ID .

    TIMES           reduce using rule 47 (factor -> PLUS ID seen_factor_ID .)
    DIVIDE          reduce using rule 47 (factor -> PLUS ID seen_factor_ID .)
    GT              reduce using rule 47 (factor -> PLUS ID seen_factor_ID .)
    LT              reduce using rule 47 (factor -> PLUS ID seen_factor_ID .)
    NE              reduce using rule 47 (factor -> PLUS ID seen_factor_ID .)
    PLUS            reduce using rule 47 (factor -> PLUS ID seen_factor_ID .)
    MINUS           reduce using rule 47 (factor -> PLUS ID seen_factor_ID .)
    RPAREN          reduce using rule 47 (factor -> PLUS ID seen_factor_ID .)
    COMMA           reduce using rule 47 (factor -> PLUS ID seen_factor_ID .)
    SEMICOLON       reduce using rule 47 (factor -> PLUS ID seen_factor_ID .)


state 94

    (48) factor -> MINUS ID seen_factor_ID .

    TIMES           reduce using rule 48 (factor -> MINUS ID seen_factor_ID .)
    DIVIDE          reduce using rule 48 (factor -> MINUS ID seen_factor_ID .)
    GT              reduce using rule 48 (factor -> MINUS ID seen_factor_ID .)
    LT              reduce using rule 48 (factor -> MINUS ID seen_factor_ID .)
    NE              reduce using rule 48 (factor -> MINUS ID seen_factor_ID .)
    PLUS            reduce using rule 48 (factor -> MINUS ID seen_factor_ID .)
    MINUS           reduce using rule 48 (factor -> MINUS ID seen_factor_ID .)
    RPAREN          reduce using rule 48 (factor -> MINUS ID seen_factor_ID .)
    COMMA           reduce using rule 48 (factor -> MINUS ID seen_factor_ID .)
    SEMICOLON       reduce using rule 48 (factor -> MINUS ID seen_factor_ID .)


state 95

    (25) cycle -> DO body WHILE LPAREN expression . RPAREN SEMICOLON

    RPAREN          shift and go to state 106


state 96

    (26) print -> PRINT LPAREN list_print_expression RPAREN SEMICOLON .

    RBRACE          reduce using rule 26 (print -> PRINT LPAREN list_print_expression RPAREN SEMICOLON .)
    ID              reduce using rule 26 (print -> PRINT LPAREN list_print_expression RPAREN SEMICOLON .)
    IF              reduce using rule 26 (print -> PRINT LPAREN list_print_expression RPAREN SEMICOLON .)
    DO              reduce using rule 26 (print -> PRINT LPAREN list_print_expression RPAREN SEMICOLON .)
    PRINT           reduce using rule 26 (print -> PRINT LPAREN list_print_expression RPAREN SEMICOLON .)


state 97

    (29) list_print_expression -> list_print_expression COMMA expression .

    RPAREN          reduce using rule 29 (list_print_expression -> list_print_expression COMMA expression .)
    COMMA           reduce using rule 29 (list_print_expression -> list_print_expression COMMA expression .)


state 98

    (27) print -> PRINT LPAREN list_print_cte RPAREN SEMICOLON .

    RBRACE          reduce using rule 27 (print -> PRINT LPAREN list_print_cte RPAREN SEMICOLON .)
    ID              reduce using rule 27 (print -> PRINT LPAREN list_print_cte RPAREN SEMICOLON .)
    IF              reduce using rule 27 (print -> PRINT LPAREN list_print_cte RPAREN SEMICOLON .)
    DO              reduce using rule 27 (print -> PRINT LPAREN list_print_cte RPAREN SEMICOLON .)
    PRINT           reduce using rule 27 (print -> PRINT LPAREN list_print_cte RPAREN SEMICOLON .)


state 99

    (31) list_print_cte -> list_print_cte COMMA CTE_STRING .

    RPAREN          reduce using rule 31 (list_print_cte -> list_print_cte COMMA CTE_STRING .)
    COMMA           reduce using rule 31 (list_print_cte -> list_print_cte COMMA CTE_STRING .)


state 100

    (19) assign -> ID seen_assign_ID EQUAL seen_term_EQUAL expression seen_exp_quad_E . SEMICOLON

    SEMICOLON       shift and go to state 107


state 101

    (24) condition -> IF LPAREN expression RPAREN body ELSE . body
    (13) body -> . LBRACE return_statement RBRACE

    LBRACE          shift and go to state 14

    body                           shift and go to state 108

state 102

    (37) exp -> exp PLUS seen_exp_PLUS_MINUS term . seen_exp_quad_P_M
    (42) term -> term . TIMES seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D
    (43) term -> term . DIVIDE seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D
    (40) seen_exp_quad_P_M -> .

    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    GT              reduce using rule 40 (seen_exp_quad_P_M -> .)
    LT              reduce using rule 40 (seen_exp_quad_P_M -> .)
    NE              reduce using rule 40 (seen_exp_quad_P_M -> .)
    PLUS            reduce using rule 40 (seen_exp_quad_P_M -> .)
    MINUS           reduce using rule 40 (seen_exp_quad_P_M -> .)
    RPAREN          reduce using rule 40 (seen_exp_quad_P_M -> .)
    COMMA           reduce using rule 40 (seen_exp_quad_P_M -> .)
    SEMICOLON       reduce using rule 40 (seen_exp_quad_P_M -> .)

    seen_exp_quad_P_M              shift and go to state 109

state 103

    (38) exp -> exp MINUS seen_exp_PLUS_MINUS term . seen_exp_quad_P_M
    (42) term -> term . TIMES seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D
    (43) term -> term . DIVIDE seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D
    (40) seen_exp_quad_P_M -> .

    TIMES           shift and go to state 71
    DIVIDE          shift and go to state 72
    GT              reduce using rule 40 (seen_exp_quad_P_M -> .)
    LT              reduce using rule 40 (seen_exp_quad_P_M -> .)
    NE              reduce using rule 40 (seen_exp_quad_P_M -> .)
    PLUS            reduce using rule 40 (seen_exp_quad_P_M -> .)
    MINUS           reduce using rule 40 (seen_exp_quad_P_M -> .)
    RPAREN          reduce using rule 40 (seen_exp_quad_P_M -> .)
    COMMA           reduce using rule 40 (seen_exp_quad_P_M -> .)
    SEMICOLON       reduce using rule 40 (seen_exp_quad_P_M -> .)

    seen_exp_quad_P_M              shift and go to state 110

state 104

    (42) term -> term TIMES seen_term_TIMES_DIVIDE factor . seen_exp_quad_T_D
    (45) seen_exp_quad_T_D -> .

    TIMES           reduce using rule 45 (seen_exp_quad_T_D -> .)
    DIVIDE          reduce using rule 45 (seen_exp_quad_T_D -> .)
    GT              reduce using rule 45 (seen_exp_quad_T_D -> .)
    LT              reduce using rule 45 (seen_exp_quad_T_D -> .)
    NE              reduce using rule 45 (seen_exp_quad_T_D -> .)
    PLUS            reduce using rule 45 (seen_exp_quad_T_D -> .)
    MINUS           reduce using rule 45 (seen_exp_quad_T_D -> .)
    RPAREN          reduce using rule 45 (seen_exp_quad_T_D -> .)
    COMMA           reduce using rule 45 (seen_exp_quad_T_D -> .)
    SEMICOLON       reduce using rule 45 (seen_exp_quad_T_D -> .)

    seen_exp_quad_T_D              shift and go to state 111

state 105

    (43) term -> term DIVIDE seen_term_TIMES_DIVIDE factor . seen_exp_quad_T_D
    (45) seen_exp_quad_T_D -> .

    TIMES           reduce using rule 45 (seen_exp_quad_T_D -> .)
    DIVIDE          reduce using rule 45 (seen_exp_quad_T_D -> .)
    GT              reduce using rule 45 (seen_exp_quad_T_D -> .)
    LT              reduce using rule 45 (seen_exp_quad_T_D -> .)
    NE              reduce using rule 45 (seen_exp_quad_T_D -> .)
    PLUS            reduce using rule 45 (seen_exp_quad_T_D -> .)
    MINUS           reduce using rule 45 (seen_exp_quad_T_D -> .)
    RPAREN          reduce using rule 45 (seen_exp_quad_T_D -> .)
    COMMA           reduce using rule 45 (seen_exp_quad_T_D -> .)
    SEMICOLON       reduce using rule 45 (seen_exp_quad_T_D -> .)

    seen_exp_quad_T_D              shift and go to state 112

state 106

    (25) cycle -> DO body WHILE LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 113


state 107

    (19) assign -> ID seen_assign_ID EQUAL seen_term_EQUAL expression seen_exp_quad_E SEMICOLON .

    RBRACE          reduce using rule 19 (assign -> ID seen_assign_ID EQUAL seen_term_EQUAL expression seen_exp_quad_E SEMICOLON .)
    ID              reduce using rule 19 (assign -> ID seen_assign_ID EQUAL seen_term_EQUAL expression seen_exp_quad_E SEMICOLON .)
    IF              reduce using rule 19 (assign -> ID seen_assign_ID EQUAL seen_term_EQUAL expression seen_exp_quad_E SEMICOLON .)
    DO              reduce using rule 19 (assign -> ID seen_assign_ID EQUAL seen_term_EQUAL expression seen_exp_quad_E SEMICOLON .)
    PRINT           reduce using rule 19 (assign -> ID seen_assign_ID EQUAL seen_term_EQUAL expression seen_exp_quad_E SEMICOLON .)


state 108

    (24) condition -> IF LPAREN expression RPAREN body ELSE body .

    RBRACE          reduce using rule 24 (condition -> IF LPAREN expression RPAREN body ELSE body .)
    ID              reduce using rule 24 (condition -> IF LPAREN expression RPAREN body ELSE body .)
    IF              reduce using rule 24 (condition -> IF LPAREN expression RPAREN body ELSE body .)
    DO              reduce using rule 24 (condition -> IF LPAREN expression RPAREN body ELSE body .)
    PRINT           reduce using rule 24 (condition -> IF LPAREN expression RPAREN body ELSE body .)


state 109

    (37) exp -> exp PLUS seen_exp_PLUS_MINUS term seen_exp_quad_P_M .

    GT              reduce using rule 37 (exp -> exp PLUS seen_exp_PLUS_MINUS term seen_exp_quad_P_M .)
    LT              reduce using rule 37 (exp -> exp PLUS seen_exp_PLUS_MINUS term seen_exp_quad_P_M .)
    NE              reduce using rule 37 (exp -> exp PLUS seen_exp_PLUS_MINUS term seen_exp_quad_P_M .)
    PLUS            reduce using rule 37 (exp -> exp PLUS seen_exp_PLUS_MINUS term seen_exp_quad_P_M .)
    MINUS           reduce using rule 37 (exp -> exp PLUS seen_exp_PLUS_MINUS term seen_exp_quad_P_M .)
    RPAREN          reduce using rule 37 (exp -> exp PLUS seen_exp_PLUS_MINUS term seen_exp_quad_P_M .)
    COMMA           reduce using rule 37 (exp -> exp PLUS seen_exp_PLUS_MINUS term seen_exp_quad_P_M .)
    SEMICOLON       reduce using rule 37 (exp -> exp PLUS seen_exp_PLUS_MINUS term seen_exp_quad_P_M .)


state 110

    (38) exp -> exp MINUS seen_exp_PLUS_MINUS term seen_exp_quad_P_M .

    GT              reduce using rule 38 (exp -> exp MINUS seen_exp_PLUS_MINUS term seen_exp_quad_P_M .)
    LT              reduce using rule 38 (exp -> exp MINUS seen_exp_PLUS_MINUS term seen_exp_quad_P_M .)
    NE              reduce using rule 38 (exp -> exp MINUS seen_exp_PLUS_MINUS term seen_exp_quad_P_M .)
    PLUS            reduce using rule 38 (exp -> exp MINUS seen_exp_PLUS_MINUS term seen_exp_quad_P_M .)
    MINUS           reduce using rule 38 (exp -> exp MINUS seen_exp_PLUS_MINUS term seen_exp_quad_P_M .)
    RPAREN          reduce using rule 38 (exp -> exp MINUS seen_exp_PLUS_MINUS term seen_exp_quad_P_M .)
    COMMA           reduce using rule 38 (exp -> exp MINUS seen_exp_PLUS_MINUS term seen_exp_quad_P_M .)
    SEMICOLON       reduce using rule 38 (exp -> exp MINUS seen_exp_PLUS_MINUS term seen_exp_quad_P_M .)


state 111

    (42) term -> term TIMES seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D .

    TIMES           reduce using rule 42 (term -> term TIMES seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D .)
    DIVIDE          reduce using rule 42 (term -> term TIMES seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D .)
    GT              reduce using rule 42 (term -> term TIMES seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D .)
    LT              reduce using rule 42 (term -> term TIMES seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D .)
    NE              reduce using rule 42 (term -> term TIMES seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D .)
    PLUS            reduce using rule 42 (term -> term TIMES seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D .)
    MINUS           reduce using rule 42 (term -> term TIMES seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D .)
    RPAREN          reduce using rule 42 (term -> term TIMES seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D .)
    COMMA           reduce using rule 42 (term -> term TIMES seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D .)
    SEMICOLON       reduce using rule 42 (term -> term TIMES seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D .)


state 112

    (43) term -> term DIVIDE seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D .

    TIMES           reduce using rule 43 (term -> term DIVIDE seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D .)
    DIVIDE          reduce using rule 43 (term -> term DIVIDE seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D .)
    GT              reduce using rule 43 (term -> term DIVIDE seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D .)
    LT              reduce using rule 43 (term -> term DIVIDE seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D .)
    NE              reduce using rule 43 (term -> term DIVIDE seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D .)
    PLUS            reduce using rule 43 (term -> term DIVIDE seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D .)
    MINUS           reduce using rule 43 (term -> term DIVIDE seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D .)
    RPAREN          reduce using rule 43 (term -> term DIVIDE seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D .)
    COMMA           reduce using rule 43 (term -> term DIVIDE seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D .)
    SEMICOLON       reduce using rule 43 (term -> term DIVIDE seen_term_TIMES_DIVIDE factor seen_exp_quad_T_D .)


state 113

    (25) cycle -> DO body WHILE LPAREN expression RPAREN SEMICOLON .

    RBRACE          reduce using rule 25 (cycle -> DO body WHILE LPAREN expression RPAREN SEMICOLON .)
    ID              reduce using rule 25 (cycle -> DO body WHILE LPAREN expression RPAREN SEMICOLON .)
    IF              reduce using rule 25 (cycle -> DO body WHILE LPAREN expression RPAREN SEMICOLON .)
    DO              reduce using rule 25 (cycle -> DO body WHILE LPAREN expression RPAREN SEMICOLON .)
    PRINT           reduce using rule 25 (cycle -> DO body WHILE LPAREN expression RPAREN SEMICOLON .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 14 resolved as shift
WARNING: shift/reduce conflict for IF in state 14 resolved as shift
WARNING: shift/reduce conflict for DO in state 14 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 14 resolved as shift
WARNING: shift/reduce conflict for RBRACE in state 20 resolved as shift
WARNING: shift/reduce conflict for ID in state 20 resolved as shift
WARNING: shift/reduce conflict for IF in state 20 resolved as shift
WARNING: shift/reduce conflict for DO in state 20 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 20 resolved as shift

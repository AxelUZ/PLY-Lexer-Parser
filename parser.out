Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMA
    VOID

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM ID SEMICOLON vars MAIN body END
Rule 2     vars -> VAR ID COLON type SEMICOLON
Rule 3     vars -> VAR ID COLON type SEMICOLON vars
Rule 4     type -> INT
Rule 5     type -> FLOAT
Rule 6     body -> LBRACE statement RBRACE
Rule 7     statement -> assign
Rule 8     statement -> condition
Rule 9     statement -> cycle
Rule 10    statement -> print
Rule 11    statement -> empty
Rule 12    assign -> ID EQUAL expression SEMICOLON
Rule 13    condition -> IF LPAREN expression RPAREN body
Rule 14    condition -> IF LPAREN expression RPAREN body ELSE body
Rule 15    cycle -> DO body WHILE LPAREN expression RPAREN SEMICOLON
Rule 16    print -> PRINT LPAREN expression RPAREN SEMICOLON
Rule 17    print -> PRINT LPAREN CTE_STRING RPAREN SEMICOLON
Rule 18    expression -> exp
Rule 19    expression -> exp GT exp
Rule 20    expression -> exp LT exp
Rule 21    expression -> exp NE exp
Rule 22    exp -> term
Rule 23    exp -> exp PLUS term
Rule 24    exp -> exp MINUS term
Rule 25    term -> factor
Rule 26    term -> term TIMES factor
Rule 27    term -> term DIVIDE factor
Rule 28    factor -> LPAREN expression RPAREN
Rule 29    factor -> PLUS ID
Rule 30    factor -> MINUS ID
Rule 31    factor -> PLUS cte
Rule 32    factor -> MINUS cte
Rule 33    factor -> ID
Rule 34    factor -> cte
Rule 35    cte -> CTE_INT
Rule 36    cte -> CTE_FLOAT
Rule 37    empty -> <empty>

Terminals, with rules where they appear

COLON                : 2 3
COMMA                : 
CTE_FLOAT            : 36
CTE_INT              : 35
CTE_STRING           : 17
DIVIDE               : 27
DO                   : 15
ELSE                 : 14
END                  : 1
EQUAL                : 12
FLOAT                : 5
GT                   : 19
ID                   : 1 2 3 12 29 30 33
IF                   : 13 14
INT                  : 4
LBRACE               : 6
LPAREN               : 13 14 15 16 17 28
LT                   : 20
MAIN                 : 1
MINUS                : 24 30 32
NE                   : 21
PLUS                 : 23 29 31
PRINT                : 16 17
PROGRAM              : 1
RBRACE               : 6
RPAREN               : 13 14 15 16 17 28
SEMICOLON            : 1 2 3 12 15 16 17
TIMES                : 26
VAR                  : 2 3
VOID                 : 
WHILE                : 15
error                : 

Nonterminals, with rules where they appear

assign               : 7
body                 : 1 13 14 14 15
condition            : 8
cte                  : 31 32 34
cycle                : 9
empty                : 11
exp                  : 18 19 19 20 20 21 21 23 24
expression           : 12 13 14 15 16 28
factor               : 25 26 27
print                : 10
program              : 0
statement            : 6
term                 : 22 23 24 26 27
type                 : 2 3
vars                 : 1 3

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM ID SEMICOLON vars MAIN body END

    PROGRAM         shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM . ID SEMICOLON vars MAIN body END

    ID              shift and go to state 3


state 3

    (1) program -> PROGRAM ID . SEMICOLON vars MAIN body END

    SEMICOLON       shift and go to state 4


state 4

    (1) program -> PROGRAM ID SEMICOLON . vars MAIN body END
    (2) vars -> . VAR ID COLON type SEMICOLON
    (3) vars -> . VAR ID COLON type SEMICOLON vars

    VAR             shift and go to state 6

    vars                           shift and go to state 5

state 5

    (1) program -> PROGRAM ID SEMICOLON vars . MAIN body END

    MAIN            shift and go to state 7


state 6

    (2) vars -> VAR . ID COLON type SEMICOLON
    (3) vars -> VAR . ID COLON type SEMICOLON vars

    ID              shift and go to state 8


state 7

    (1) program -> PROGRAM ID SEMICOLON vars MAIN . body END
    (6) body -> . LBRACE statement RBRACE

    LBRACE          shift and go to state 10

    body                           shift and go to state 9

state 8

    (2) vars -> VAR ID . COLON type SEMICOLON
    (3) vars -> VAR ID . COLON type SEMICOLON vars

    COLON           shift and go to state 11


state 9

    (1) program -> PROGRAM ID SEMICOLON vars MAIN body . END

    END             shift and go to state 12


state 10

    (6) body -> LBRACE . statement RBRACE
    (7) statement -> . assign
    (8) statement -> . condition
    (9) statement -> . cycle
    (10) statement -> . print
    (11) statement -> . empty
    (12) assign -> . ID EQUAL expression SEMICOLON
    (13) condition -> . IF LPAREN expression RPAREN body
    (14) condition -> . IF LPAREN expression RPAREN body ELSE body
    (15) cycle -> . DO body WHILE LPAREN expression RPAREN SEMICOLON
    (16) print -> . PRINT LPAREN expression RPAREN SEMICOLON
    (17) print -> . PRINT LPAREN CTE_STRING RPAREN SEMICOLON
    (37) empty -> .

    ID              shift and go to state 19
    IF              shift and go to state 20
    DO              shift and go to state 21
    PRINT           shift and go to state 22
    RBRACE          reduce using rule 37 (empty -> .)

    statement                      shift and go to state 13
    assign                         shift and go to state 14
    condition                      shift and go to state 15
    cycle                          shift and go to state 16
    print                          shift and go to state 17
    empty                          shift and go to state 18

state 11

    (2) vars -> VAR ID COLON . type SEMICOLON
    (3) vars -> VAR ID COLON . type SEMICOLON vars
    (4) type -> . INT
    (5) type -> . FLOAT

    INT             shift and go to state 24
    FLOAT           shift and go to state 25

    type                           shift and go to state 23

state 12

    (1) program -> PROGRAM ID SEMICOLON vars MAIN body END .

    $end            reduce using rule 1 (program -> PROGRAM ID SEMICOLON vars MAIN body END .)


state 13

    (6) body -> LBRACE statement . RBRACE

    RBRACE          shift and go to state 26


state 14

    (7) statement -> assign .

    RBRACE          reduce using rule 7 (statement -> assign .)


state 15

    (8) statement -> condition .

    RBRACE          reduce using rule 8 (statement -> condition .)


state 16

    (9) statement -> cycle .

    RBRACE          reduce using rule 9 (statement -> cycle .)


state 17

    (10) statement -> print .

    RBRACE          reduce using rule 10 (statement -> print .)


state 18

    (11) statement -> empty .

    RBRACE          reduce using rule 11 (statement -> empty .)


state 19

    (12) assign -> ID . EQUAL expression SEMICOLON

    EQUAL           shift and go to state 27


state 20

    (13) condition -> IF . LPAREN expression RPAREN body
    (14) condition -> IF . LPAREN expression RPAREN body ELSE body

    LPAREN          shift and go to state 28


state 21

    (15) cycle -> DO . body WHILE LPAREN expression RPAREN SEMICOLON
    (6) body -> . LBRACE statement RBRACE

    LBRACE          shift and go to state 10

    body                           shift and go to state 29

state 22

    (16) print -> PRINT . LPAREN expression RPAREN SEMICOLON
    (17) print -> PRINT . LPAREN CTE_STRING RPAREN SEMICOLON

    LPAREN          shift and go to state 30


state 23

    (2) vars -> VAR ID COLON type . SEMICOLON
    (3) vars -> VAR ID COLON type . SEMICOLON vars

    SEMICOLON       shift and go to state 31


state 24

    (4) type -> INT .

    SEMICOLON       reduce using rule 4 (type -> INT .)


state 25

    (5) type -> FLOAT .

    SEMICOLON       reduce using rule 5 (type -> FLOAT .)


state 26

    (6) body -> LBRACE statement RBRACE .

    END             reduce using rule 6 (body -> LBRACE statement RBRACE .)
    WHILE           reduce using rule 6 (body -> LBRACE statement RBRACE .)
    ELSE            reduce using rule 6 (body -> LBRACE statement RBRACE .)
    RBRACE          reduce using rule 6 (body -> LBRACE statement RBRACE .)


state 27

    (12) assign -> ID EQUAL . expression SEMICOLON
    (18) expression -> . exp
    (19) expression -> . exp GT exp
    (20) expression -> . exp LT exp
    (21) expression -> . exp NE exp
    (22) exp -> . term
    (23) exp -> . exp PLUS term
    (24) exp -> . exp MINUS term
    (25) term -> . factor
    (26) term -> . term TIMES factor
    (27) term -> . term DIVIDE factor
    (28) factor -> . LPAREN expression RPAREN
    (29) factor -> . PLUS ID
    (30) factor -> . MINUS ID
    (31) factor -> . PLUS cte
    (32) factor -> . MINUS cte
    (33) factor -> . ID
    (34) factor -> . cte
    (35) cte -> . CTE_INT
    (36) cte -> . CTE_FLOAT

    LPAREN          shift and go to state 39
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    ID              shift and go to state 32
    CTE_INT         shift and go to state 41
    CTE_FLOAT       shift and go to state 42

    expression                     shift and go to state 33
    exp                            shift and go to state 34
    term                           shift and go to state 35
    factor                         shift and go to state 38
    cte                            shift and go to state 40

state 28

    (13) condition -> IF LPAREN . expression RPAREN body
    (14) condition -> IF LPAREN . expression RPAREN body ELSE body
    (18) expression -> . exp
    (19) expression -> . exp GT exp
    (20) expression -> . exp LT exp
    (21) expression -> . exp NE exp
    (22) exp -> . term
    (23) exp -> . exp PLUS term
    (24) exp -> . exp MINUS term
    (25) term -> . factor
    (26) term -> . term TIMES factor
    (27) term -> . term DIVIDE factor
    (28) factor -> . LPAREN expression RPAREN
    (29) factor -> . PLUS ID
    (30) factor -> . MINUS ID
    (31) factor -> . PLUS cte
    (32) factor -> . MINUS cte
    (33) factor -> . ID
    (34) factor -> . cte
    (35) cte -> . CTE_INT
    (36) cte -> . CTE_FLOAT

    LPAREN          shift and go to state 39
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    ID              shift and go to state 32
    CTE_INT         shift and go to state 41
    CTE_FLOAT       shift and go to state 42

    expression                     shift and go to state 43
    exp                            shift and go to state 34
    term                           shift and go to state 35
    factor                         shift and go to state 38
    cte                            shift and go to state 40

state 29

    (15) cycle -> DO body . WHILE LPAREN expression RPAREN SEMICOLON

    WHILE           shift and go to state 44


state 30

    (16) print -> PRINT LPAREN . expression RPAREN SEMICOLON
    (17) print -> PRINT LPAREN . CTE_STRING RPAREN SEMICOLON
    (18) expression -> . exp
    (19) expression -> . exp GT exp
    (20) expression -> . exp LT exp
    (21) expression -> . exp NE exp
    (22) exp -> . term
    (23) exp -> . exp PLUS term
    (24) exp -> . exp MINUS term
    (25) term -> . factor
    (26) term -> . term TIMES factor
    (27) term -> . term DIVIDE factor
    (28) factor -> . LPAREN expression RPAREN
    (29) factor -> . PLUS ID
    (30) factor -> . MINUS ID
    (31) factor -> . PLUS cte
    (32) factor -> . MINUS cte
    (33) factor -> . ID
    (34) factor -> . cte
    (35) cte -> . CTE_INT
    (36) cte -> . CTE_FLOAT

    CTE_STRING      shift and go to state 46
    LPAREN          shift and go to state 39
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    ID              shift and go to state 32
    CTE_INT         shift and go to state 41
    CTE_FLOAT       shift and go to state 42

    expression                     shift and go to state 45
    exp                            shift and go to state 34
    term                           shift and go to state 35
    factor                         shift and go to state 38
    cte                            shift and go to state 40

state 31

    (2) vars -> VAR ID COLON type SEMICOLON .
    (3) vars -> VAR ID COLON type SEMICOLON . vars
    (2) vars -> . VAR ID COLON type SEMICOLON
    (3) vars -> . VAR ID COLON type SEMICOLON vars

    MAIN            reduce using rule 2 (vars -> VAR ID COLON type SEMICOLON .)
    VAR             shift and go to state 6

    vars                           shift and go to state 47

state 32

    (33) factor -> ID .

    TIMES           reduce using rule 33 (factor -> ID .)
    DIVIDE          reduce using rule 33 (factor -> ID .)
    GT              reduce using rule 33 (factor -> ID .)
    LT              reduce using rule 33 (factor -> ID .)
    NE              reduce using rule 33 (factor -> ID .)
    PLUS            reduce using rule 33 (factor -> ID .)
    MINUS           reduce using rule 33 (factor -> ID .)
    SEMICOLON       reduce using rule 33 (factor -> ID .)
    RPAREN          reduce using rule 33 (factor -> ID .)


state 33

    (12) assign -> ID EQUAL expression . SEMICOLON

    SEMICOLON       shift and go to state 48


state 34

    (18) expression -> exp .
    (19) expression -> exp . GT exp
    (20) expression -> exp . LT exp
    (21) expression -> exp . NE exp
    (23) exp -> exp . PLUS term
    (24) exp -> exp . MINUS term

    SEMICOLON       reduce using rule 18 (expression -> exp .)
    RPAREN          reduce using rule 18 (expression -> exp .)
    GT              shift and go to state 49
    LT              shift and go to state 50
    NE              shift and go to state 51
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53


state 35

    (22) exp -> term .
    (26) term -> term . TIMES factor
    (27) term -> term . DIVIDE factor

    GT              reduce using rule 22 (exp -> term .)
    LT              reduce using rule 22 (exp -> term .)
    NE              reduce using rule 22 (exp -> term .)
    PLUS            reduce using rule 22 (exp -> term .)
    MINUS           reduce using rule 22 (exp -> term .)
    SEMICOLON       reduce using rule 22 (exp -> term .)
    RPAREN          reduce using rule 22 (exp -> term .)
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55


state 36

    (29) factor -> PLUS . ID
    (31) factor -> PLUS . cte
    (35) cte -> . CTE_INT
    (36) cte -> . CTE_FLOAT

    ID              shift and go to state 56
    CTE_INT         shift and go to state 41
    CTE_FLOAT       shift and go to state 42

    cte                            shift and go to state 57

state 37

    (30) factor -> MINUS . ID
    (32) factor -> MINUS . cte
    (35) cte -> . CTE_INT
    (36) cte -> . CTE_FLOAT

    ID              shift and go to state 58
    CTE_INT         shift and go to state 41
    CTE_FLOAT       shift and go to state 42

    cte                            shift and go to state 59

state 38

    (25) term -> factor .

    TIMES           reduce using rule 25 (term -> factor .)
    DIVIDE          reduce using rule 25 (term -> factor .)
    GT              reduce using rule 25 (term -> factor .)
    LT              reduce using rule 25 (term -> factor .)
    NE              reduce using rule 25 (term -> factor .)
    PLUS            reduce using rule 25 (term -> factor .)
    MINUS           reduce using rule 25 (term -> factor .)
    SEMICOLON       reduce using rule 25 (term -> factor .)
    RPAREN          reduce using rule 25 (term -> factor .)


state 39

    (28) factor -> LPAREN . expression RPAREN
    (18) expression -> . exp
    (19) expression -> . exp GT exp
    (20) expression -> . exp LT exp
    (21) expression -> . exp NE exp
    (22) exp -> . term
    (23) exp -> . exp PLUS term
    (24) exp -> . exp MINUS term
    (25) term -> . factor
    (26) term -> . term TIMES factor
    (27) term -> . term DIVIDE factor
    (28) factor -> . LPAREN expression RPAREN
    (29) factor -> . PLUS ID
    (30) factor -> . MINUS ID
    (31) factor -> . PLUS cte
    (32) factor -> . MINUS cte
    (33) factor -> . ID
    (34) factor -> . cte
    (35) cte -> . CTE_INT
    (36) cte -> . CTE_FLOAT

    LPAREN          shift and go to state 39
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    ID              shift and go to state 32
    CTE_INT         shift and go to state 41
    CTE_FLOAT       shift and go to state 42

    expression                     shift and go to state 60
    exp                            shift and go to state 34
    term                           shift and go to state 35
    factor                         shift and go to state 38
    cte                            shift and go to state 40

state 40

    (34) factor -> cte .

    TIMES           reduce using rule 34 (factor -> cte .)
    DIVIDE          reduce using rule 34 (factor -> cte .)
    GT              reduce using rule 34 (factor -> cte .)
    LT              reduce using rule 34 (factor -> cte .)
    NE              reduce using rule 34 (factor -> cte .)
    PLUS            reduce using rule 34 (factor -> cte .)
    MINUS           reduce using rule 34 (factor -> cte .)
    SEMICOLON       reduce using rule 34 (factor -> cte .)
    RPAREN          reduce using rule 34 (factor -> cte .)


state 41

    (35) cte -> CTE_INT .

    TIMES           reduce using rule 35 (cte -> CTE_INT .)
    DIVIDE          reduce using rule 35 (cte -> CTE_INT .)
    GT              reduce using rule 35 (cte -> CTE_INT .)
    LT              reduce using rule 35 (cte -> CTE_INT .)
    NE              reduce using rule 35 (cte -> CTE_INT .)
    PLUS            reduce using rule 35 (cte -> CTE_INT .)
    MINUS           reduce using rule 35 (cte -> CTE_INT .)
    SEMICOLON       reduce using rule 35 (cte -> CTE_INT .)
    RPAREN          reduce using rule 35 (cte -> CTE_INT .)


state 42

    (36) cte -> CTE_FLOAT .

    TIMES           reduce using rule 36 (cte -> CTE_FLOAT .)
    DIVIDE          reduce using rule 36 (cte -> CTE_FLOAT .)
    GT              reduce using rule 36 (cte -> CTE_FLOAT .)
    LT              reduce using rule 36 (cte -> CTE_FLOAT .)
    NE              reduce using rule 36 (cte -> CTE_FLOAT .)
    PLUS            reduce using rule 36 (cte -> CTE_FLOAT .)
    MINUS           reduce using rule 36 (cte -> CTE_FLOAT .)
    SEMICOLON       reduce using rule 36 (cte -> CTE_FLOAT .)
    RPAREN          reduce using rule 36 (cte -> CTE_FLOAT .)


state 43

    (13) condition -> IF LPAREN expression . RPAREN body
    (14) condition -> IF LPAREN expression . RPAREN body ELSE body

    RPAREN          shift and go to state 61


state 44

    (15) cycle -> DO body WHILE . LPAREN expression RPAREN SEMICOLON

    LPAREN          shift and go to state 62


state 45

    (16) print -> PRINT LPAREN expression . RPAREN SEMICOLON

    RPAREN          shift and go to state 63


state 46

    (17) print -> PRINT LPAREN CTE_STRING . RPAREN SEMICOLON

    RPAREN          shift and go to state 64


state 47

    (3) vars -> VAR ID COLON type SEMICOLON vars .

    MAIN            reduce using rule 3 (vars -> VAR ID COLON type SEMICOLON vars .)


state 48

    (12) assign -> ID EQUAL expression SEMICOLON .

    RBRACE          reduce using rule 12 (assign -> ID EQUAL expression SEMICOLON .)


state 49

    (19) expression -> exp GT . exp
    (22) exp -> . term
    (23) exp -> . exp PLUS term
    (24) exp -> . exp MINUS term
    (25) term -> . factor
    (26) term -> . term TIMES factor
    (27) term -> . term DIVIDE factor
    (28) factor -> . LPAREN expression RPAREN
    (29) factor -> . PLUS ID
    (30) factor -> . MINUS ID
    (31) factor -> . PLUS cte
    (32) factor -> . MINUS cte
    (33) factor -> . ID
    (34) factor -> . cte
    (35) cte -> . CTE_INT
    (36) cte -> . CTE_FLOAT

    LPAREN          shift and go to state 39
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    ID              shift and go to state 32
    CTE_INT         shift and go to state 41
    CTE_FLOAT       shift and go to state 42

    exp                            shift and go to state 65
    term                           shift and go to state 35
    factor                         shift and go to state 38
    cte                            shift and go to state 40

state 50

    (20) expression -> exp LT . exp
    (22) exp -> . term
    (23) exp -> . exp PLUS term
    (24) exp -> . exp MINUS term
    (25) term -> . factor
    (26) term -> . term TIMES factor
    (27) term -> . term DIVIDE factor
    (28) factor -> . LPAREN expression RPAREN
    (29) factor -> . PLUS ID
    (30) factor -> . MINUS ID
    (31) factor -> . PLUS cte
    (32) factor -> . MINUS cte
    (33) factor -> . ID
    (34) factor -> . cte
    (35) cte -> . CTE_INT
    (36) cte -> . CTE_FLOAT

    LPAREN          shift and go to state 39
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    ID              shift and go to state 32
    CTE_INT         shift and go to state 41
    CTE_FLOAT       shift and go to state 42

    exp                            shift and go to state 66
    term                           shift and go to state 35
    factor                         shift and go to state 38
    cte                            shift and go to state 40

state 51

    (21) expression -> exp NE . exp
    (22) exp -> . term
    (23) exp -> . exp PLUS term
    (24) exp -> . exp MINUS term
    (25) term -> . factor
    (26) term -> . term TIMES factor
    (27) term -> . term DIVIDE factor
    (28) factor -> . LPAREN expression RPAREN
    (29) factor -> . PLUS ID
    (30) factor -> . MINUS ID
    (31) factor -> . PLUS cte
    (32) factor -> . MINUS cte
    (33) factor -> . ID
    (34) factor -> . cte
    (35) cte -> . CTE_INT
    (36) cte -> . CTE_FLOAT

    LPAREN          shift and go to state 39
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    ID              shift and go to state 32
    CTE_INT         shift and go to state 41
    CTE_FLOAT       shift and go to state 42

    exp                            shift and go to state 67
    term                           shift and go to state 35
    factor                         shift and go to state 38
    cte                            shift and go to state 40

state 52

    (23) exp -> exp PLUS . term
    (25) term -> . factor
    (26) term -> . term TIMES factor
    (27) term -> . term DIVIDE factor
    (28) factor -> . LPAREN expression RPAREN
    (29) factor -> . PLUS ID
    (30) factor -> . MINUS ID
    (31) factor -> . PLUS cte
    (32) factor -> . MINUS cte
    (33) factor -> . ID
    (34) factor -> . cte
    (35) cte -> . CTE_INT
    (36) cte -> . CTE_FLOAT

    LPAREN          shift and go to state 39
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    ID              shift and go to state 32
    CTE_INT         shift and go to state 41
    CTE_FLOAT       shift and go to state 42

    term                           shift and go to state 68
    factor                         shift and go to state 38
    cte                            shift and go to state 40

state 53

    (24) exp -> exp MINUS . term
    (25) term -> . factor
    (26) term -> . term TIMES factor
    (27) term -> . term DIVIDE factor
    (28) factor -> . LPAREN expression RPAREN
    (29) factor -> . PLUS ID
    (30) factor -> . MINUS ID
    (31) factor -> . PLUS cte
    (32) factor -> . MINUS cte
    (33) factor -> . ID
    (34) factor -> . cte
    (35) cte -> . CTE_INT
    (36) cte -> . CTE_FLOAT

    LPAREN          shift and go to state 39
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    ID              shift and go to state 32
    CTE_INT         shift and go to state 41
    CTE_FLOAT       shift and go to state 42

    term                           shift and go to state 69
    factor                         shift and go to state 38
    cte                            shift and go to state 40

state 54

    (26) term -> term TIMES . factor
    (28) factor -> . LPAREN expression RPAREN
    (29) factor -> . PLUS ID
    (30) factor -> . MINUS ID
    (31) factor -> . PLUS cte
    (32) factor -> . MINUS cte
    (33) factor -> . ID
    (34) factor -> . cte
    (35) cte -> . CTE_INT
    (36) cte -> . CTE_FLOAT

    LPAREN          shift and go to state 39
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    ID              shift and go to state 32
    CTE_INT         shift and go to state 41
    CTE_FLOAT       shift and go to state 42

    factor                         shift and go to state 70
    cte                            shift and go to state 40

state 55

    (27) term -> term DIVIDE . factor
    (28) factor -> . LPAREN expression RPAREN
    (29) factor -> . PLUS ID
    (30) factor -> . MINUS ID
    (31) factor -> . PLUS cte
    (32) factor -> . MINUS cte
    (33) factor -> . ID
    (34) factor -> . cte
    (35) cte -> . CTE_INT
    (36) cte -> . CTE_FLOAT

    LPAREN          shift and go to state 39
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    ID              shift and go to state 32
    CTE_INT         shift and go to state 41
    CTE_FLOAT       shift and go to state 42

    factor                         shift and go to state 71
    cte                            shift and go to state 40

state 56

    (29) factor -> PLUS ID .

    TIMES           reduce using rule 29 (factor -> PLUS ID .)
    DIVIDE          reduce using rule 29 (factor -> PLUS ID .)
    GT              reduce using rule 29 (factor -> PLUS ID .)
    LT              reduce using rule 29 (factor -> PLUS ID .)
    NE              reduce using rule 29 (factor -> PLUS ID .)
    PLUS            reduce using rule 29 (factor -> PLUS ID .)
    MINUS           reduce using rule 29 (factor -> PLUS ID .)
    SEMICOLON       reduce using rule 29 (factor -> PLUS ID .)
    RPAREN          reduce using rule 29 (factor -> PLUS ID .)


state 57

    (31) factor -> PLUS cte .

    TIMES           reduce using rule 31 (factor -> PLUS cte .)
    DIVIDE          reduce using rule 31 (factor -> PLUS cte .)
    GT              reduce using rule 31 (factor -> PLUS cte .)
    LT              reduce using rule 31 (factor -> PLUS cte .)
    NE              reduce using rule 31 (factor -> PLUS cte .)
    PLUS            reduce using rule 31 (factor -> PLUS cte .)
    MINUS           reduce using rule 31 (factor -> PLUS cte .)
    SEMICOLON       reduce using rule 31 (factor -> PLUS cte .)
    RPAREN          reduce using rule 31 (factor -> PLUS cte .)


state 58

    (30) factor -> MINUS ID .

    TIMES           reduce using rule 30 (factor -> MINUS ID .)
    DIVIDE          reduce using rule 30 (factor -> MINUS ID .)
    GT              reduce using rule 30 (factor -> MINUS ID .)
    LT              reduce using rule 30 (factor -> MINUS ID .)
    NE              reduce using rule 30 (factor -> MINUS ID .)
    PLUS            reduce using rule 30 (factor -> MINUS ID .)
    MINUS           reduce using rule 30 (factor -> MINUS ID .)
    SEMICOLON       reduce using rule 30 (factor -> MINUS ID .)
    RPAREN          reduce using rule 30 (factor -> MINUS ID .)


state 59

    (32) factor -> MINUS cte .

    TIMES           reduce using rule 32 (factor -> MINUS cte .)
    DIVIDE          reduce using rule 32 (factor -> MINUS cte .)
    GT              reduce using rule 32 (factor -> MINUS cte .)
    LT              reduce using rule 32 (factor -> MINUS cte .)
    NE              reduce using rule 32 (factor -> MINUS cte .)
    PLUS            reduce using rule 32 (factor -> MINUS cte .)
    MINUS           reduce using rule 32 (factor -> MINUS cte .)
    SEMICOLON       reduce using rule 32 (factor -> MINUS cte .)
    RPAREN          reduce using rule 32 (factor -> MINUS cte .)


state 60

    (28) factor -> LPAREN expression . RPAREN

    RPAREN          shift and go to state 72


state 61

    (13) condition -> IF LPAREN expression RPAREN . body
    (14) condition -> IF LPAREN expression RPAREN . body ELSE body
    (6) body -> . LBRACE statement RBRACE

    LBRACE          shift and go to state 10

    body                           shift and go to state 73

state 62

    (15) cycle -> DO body WHILE LPAREN . expression RPAREN SEMICOLON
    (18) expression -> . exp
    (19) expression -> . exp GT exp
    (20) expression -> . exp LT exp
    (21) expression -> . exp NE exp
    (22) exp -> . term
    (23) exp -> . exp PLUS term
    (24) exp -> . exp MINUS term
    (25) term -> . factor
    (26) term -> . term TIMES factor
    (27) term -> . term DIVIDE factor
    (28) factor -> . LPAREN expression RPAREN
    (29) factor -> . PLUS ID
    (30) factor -> . MINUS ID
    (31) factor -> . PLUS cte
    (32) factor -> . MINUS cte
    (33) factor -> . ID
    (34) factor -> . cte
    (35) cte -> . CTE_INT
    (36) cte -> . CTE_FLOAT

    LPAREN          shift and go to state 39
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    ID              shift and go to state 32
    CTE_INT         shift and go to state 41
    CTE_FLOAT       shift and go to state 42

    expression                     shift and go to state 74
    exp                            shift and go to state 34
    term                           shift and go to state 35
    factor                         shift and go to state 38
    cte                            shift and go to state 40

state 63

    (16) print -> PRINT LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 75


state 64

    (17) print -> PRINT LPAREN CTE_STRING RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 76


state 65

    (19) expression -> exp GT exp .
    (23) exp -> exp . PLUS term
    (24) exp -> exp . MINUS term

    SEMICOLON       reduce using rule 19 (expression -> exp GT exp .)
    RPAREN          reduce using rule 19 (expression -> exp GT exp .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53


state 66

    (20) expression -> exp LT exp .
    (23) exp -> exp . PLUS term
    (24) exp -> exp . MINUS term

    SEMICOLON       reduce using rule 20 (expression -> exp LT exp .)
    RPAREN          reduce using rule 20 (expression -> exp LT exp .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53


state 67

    (21) expression -> exp NE exp .
    (23) exp -> exp . PLUS term
    (24) exp -> exp . MINUS term

    SEMICOLON       reduce using rule 21 (expression -> exp NE exp .)
    RPAREN          reduce using rule 21 (expression -> exp NE exp .)
    PLUS            shift and go to state 52
    MINUS           shift and go to state 53


state 68

    (23) exp -> exp PLUS term .
    (26) term -> term . TIMES factor
    (27) term -> term . DIVIDE factor

    GT              reduce using rule 23 (exp -> exp PLUS term .)
    LT              reduce using rule 23 (exp -> exp PLUS term .)
    NE              reduce using rule 23 (exp -> exp PLUS term .)
    PLUS            reduce using rule 23 (exp -> exp PLUS term .)
    MINUS           reduce using rule 23 (exp -> exp PLUS term .)
    SEMICOLON       reduce using rule 23 (exp -> exp PLUS term .)
    RPAREN          reduce using rule 23 (exp -> exp PLUS term .)
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55


state 69

    (24) exp -> exp MINUS term .
    (26) term -> term . TIMES factor
    (27) term -> term . DIVIDE factor

    GT              reduce using rule 24 (exp -> exp MINUS term .)
    LT              reduce using rule 24 (exp -> exp MINUS term .)
    NE              reduce using rule 24 (exp -> exp MINUS term .)
    PLUS            reduce using rule 24 (exp -> exp MINUS term .)
    MINUS           reduce using rule 24 (exp -> exp MINUS term .)
    SEMICOLON       reduce using rule 24 (exp -> exp MINUS term .)
    RPAREN          reduce using rule 24 (exp -> exp MINUS term .)
    TIMES           shift and go to state 54
    DIVIDE          shift and go to state 55


state 70

    (26) term -> term TIMES factor .

    TIMES           reduce using rule 26 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 26 (term -> term TIMES factor .)
    GT              reduce using rule 26 (term -> term TIMES factor .)
    LT              reduce using rule 26 (term -> term TIMES factor .)
    NE              reduce using rule 26 (term -> term TIMES factor .)
    PLUS            reduce using rule 26 (term -> term TIMES factor .)
    MINUS           reduce using rule 26 (term -> term TIMES factor .)
    SEMICOLON       reduce using rule 26 (term -> term TIMES factor .)
    RPAREN          reduce using rule 26 (term -> term TIMES factor .)


state 71

    (27) term -> term DIVIDE factor .

    TIMES           reduce using rule 27 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 27 (term -> term DIVIDE factor .)
    GT              reduce using rule 27 (term -> term DIVIDE factor .)
    LT              reduce using rule 27 (term -> term DIVIDE factor .)
    NE              reduce using rule 27 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 27 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 27 (term -> term DIVIDE factor .)
    SEMICOLON       reduce using rule 27 (term -> term DIVIDE factor .)
    RPAREN          reduce using rule 27 (term -> term DIVIDE factor .)


state 72

    (28) factor -> LPAREN expression RPAREN .

    TIMES           reduce using rule 28 (factor -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 28 (factor -> LPAREN expression RPAREN .)
    GT              reduce using rule 28 (factor -> LPAREN expression RPAREN .)
    LT              reduce using rule 28 (factor -> LPAREN expression RPAREN .)
    NE              reduce using rule 28 (factor -> LPAREN expression RPAREN .)
    PLUS            reduce using rule 28 (factor -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 28 (factor -> LPAREN expression RPAREN .)
    SEMICOLON       reduce using rule 28 (factor -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 28 (factor -> LPAREN expression RPAREN .)


state 73

    (13) condition -> IF LPAREN expression RPAREN body .
    (14) condition -> IF LPAREN expression RPAREN body . ELSE body

    RBRACE          reduce using rule 13 (condition -> IF LPAREN expression RPAREN body .)
    ELSE            shift and go to state 77


state 74

    (15) cycle -> DO body WHILE LPAREN expression . RPAREN SEMICOLON

    RPAREN          shift and go to state 78


state 75

    (16) print -> PRINT LPAREN expression RPAREN SEMICOLON .

    RBRACE          reduce using rule 16 (print -> PRINT LPAREN expression RPAREN SEMICOLON .)


state 76

    (17) print -> PRINT LPAREN CTE_STRING RPAREN SEMICOLON .

    RBRACE          reduce using rule 17 (print -> PRINT LPAREN CTE_STRING RPAREN SEMICOLON .)


state 77

    (14) condition -> IF LPAREN expression RPAREN body ELSE . body
    (6) body -> . LBRACE statement RBRACE

    LBRACE          shift and go to state 10

    body                           shift and go to state 79

state 78

    (15) cycle -> DO body WHILE LPAREN expression RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 80


state 79

    (14) condition -> IF LPAREN expression RPAREN body ELSE body .

    RBRACE          reduce using rule 14 (condition -> IF LPAREN expression RPAREN body ELSE body .)


state 80

    (15) cycle -> DO body WHILE LPAREN expression RPAREN SEMICOLON .

    RBRACE          reduce using rule 15 (cycle -> DO body WHILE LPAREN expression RPAREN SEMICOLON .)

